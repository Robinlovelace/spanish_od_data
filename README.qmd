---
format: gfm
execute: 
  message: false
  warning: false
knitr:
  opts_chunk:
    fig.path: "man/figures/README-"
---

This repo demonstrates how to download and use OD data from Spain, published by [transportes.gob.es](https://www.transportes.gob.es/ministerio/proyectos-singulares/estudios-de-movilidad-con-big-data/opendata-movilidad)

The data is provided as follows:

- Estudios basicos
    - Por disitritos
      - Personas (population)
      - Pernoctaciones (overnight stays)
      - Viajes
        - ficheros-diarios
        - meses-completos

The package is designed to save people time by providing the data in analyis-ready formats.
Automating the process of downloading, cleaning and importing the data can also reduce the risk of errors in the laborious process of data preparation.

The datasets are large, so the package aims to reduce computational resources, by using computationally efficient packages behind the scenes.
If you want to use many of the data files, it's recommended you set a data directory where the package will look for the data, only downloading the files that are not already present.

Set the data directory by setting the `SPANISHOD_DATA_DIR` environment variable, e.g. the following command:

```{r}
usethis::edit_r_environ()
# Then set the data director, by typing this line in the file:
```

```
SPANISHOD_DATA_DIR = "/path/to/data"
```


```{r}
#| label: installation
if (!requireNamespace("remotes", quietly = TRUE)) {
  install.packages("remotes")
}
remotes::install_cran("duckdb")
```

```{r}
#| label: pkgs
library(duckdb)
library(tidyverse)
devtools::load_all()
```

## Zones

Zones can be downloaded as follows:

```{r}
#| label: distritos
distritos = get_zones(type = "distritos")
plot(distritos)
```

## Estudios basicos

Each day in the `ficheros-diarios` folder contains a file with the following columns:

```{r}
#| label: ficheros-diarios-example
# set timeout for downloads
options(timeout = 600) # 10 minutes
u1 = "https://movilidad-opendata.mitma.es/estudios_basicos/por-distritos/viajes/ficheros-diarios/2024-03/20240301_Viajes_distritos.csv.gz"
f1 = basename(u1)
if (!file.exists(f1)) {
  download.file(u1, f1)
}
drv = duckdb::duckdb("daily.duckdb")
con = DBI::dbConnect(drv)
od1 = duckdb::tbl_file(con, f1)
# colnames(od1)
#  [1] "fecha"                   "periodo"                
#  [3] "origen"                  "destino"                
#  [5] "distancia"               "actividad_origen"       
#  [7] "actividad_destino"       "estudio_origen_posible" 
#  [9] "estudio_destino_posible" "residencia"             
# [11] "renta"                   "edad"                   
# [13] "sexo"                    "viajes"                 
# [15] "viajes_km"
od1_head = od1 |>
  head() |>
  collect()
od1_head |>
  knitr::kable()
DBI::dbDisconnect(con)
```




```{r}
#| eval: false
#| echo: false
#| label: repo-setup
# Create data-raw and data folders
usethis::use_data_raw()
usethis::use_description()
usethis::use_r("get.R")
usethis::use_package("glue")
usethis::use_package("xml2")
#     ‘fs’ ‘lubridate’ ‘stringr’
usethis::use_package("fs")
usethis::use_package("lubridate")
usethis::use_package("stringr")
devtools::check()
# Set-up pkgdown + ci
usethis::use_pkgdown()
usethis::use_github_action("pkgdown")
# Setup gh pages:
usethis::use_github_pages()
```






```{r}
#| eval: false
#| include: false
# Testing other datasets:
u = "https://movilidad-opendata.mitma.es/estudios_completos/por-distritos/movilidad_obligada/meses-completos/202201_Movilidad_obligada_distritos.csv.gz"
f = basename(u)
if (!file.exists(f)) {
  download.file(u, f)
}
drv = duckdb::duckdb("movilidad.duckdb")
con = DBI::dbConnect(drv)
od1 = duckdb::tbl_file(con, f)
od1_head = od1 |>
  head() |>
  collect()
# close connection:
DBI::dbDisconnect(con)
# # A tibble: 6 × 8
#      mes origen destino  edad  sexo   residencia recurrencia personas
#    <dbl> <chr>  <chr>    <chr> <chr>  <chr>      <chr>          <dbl>
# 1 202201 01001  01002    NA    NA     01         1-2             4.41
# 2 202201 01001  01002    0-25  hombre 01         5-7            11   
# 3 202201 01001  01004_AM NA    NA     01         1-2             4.39
# 4 202201 01001  01009_AM 0-25  mujer  01         1-2           145.  
# 5 202201 01001  01009_AM 25-45 mujer  01         1-2           120.  
# 6 202201 01001  01009_AM 45-65 mujer  01         1-2           119.  
od1_full = od1 |>
  collect()
table(od1_full$recurrencia)
od1_head |>
  knitr::kable()
```